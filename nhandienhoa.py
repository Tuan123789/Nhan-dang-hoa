# -*- coding: utf-8 -*-
"""Nhandienhoa.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xMWppab-8wJf369P2enAhK_al2pDCXp9
"""

https://drive.google.com/drive/folders/1lLupFMH_2XStEK62Xm_hS-nQBj4ey_Ca?usp=sharing #Link drive train

https://drive.google.com/drive/folders/1h23aO3ZH2Wyq-JWt7NyuygedySLmnTQg?usp=sharing # Link test

#Load dữ liệu từ drive vào các biến X_train, y_train
from os import listdir
from numpy import asarray,save
from keras.preprocessing.image import load_img
from keras.preprocessing.image import img_to_array
folder = '/content/drive/MyDrive/AI/Hoa/'
photos, labels = list(),list()
for file in listdir(folder):
  output = 0.
  if file.startswith('ThuocDuoc'):
    output = 1.0
  if file.startswith('MatTroi'):
    output = 2.0
  if file.startswith('VanTho'):
    output = 3.0
  photo = load_img(folder+file,target_size=(150,150))
  photo = img_to_array(photo)
  photos.append(photo)
  labels.append(output)
photos = asarray(photos)
labels= asarray(labels)
print(photos.shape,labels.shape)
save('X_train.npy',photos)
save('y_train.npy',labels)

folder = '/content/drive/MyDrive/AI/Test/'
photos1, labels1 = list(),list()
for file in listdir(folder):
  output = 0.
  if file.startswith('ThuocDuoc'):
    output = 1.0
  if file.startswith('MatTroi'):
    output = 2.0
  if file.startswith('VanTho'):
    output = 3.0
  photo = load_img(folder+file,target_size=(150,150))
  photo = img_to_array(photo)
  photos1.append(photo)
  labels1.append(output)
photos1 = asarray(photos1)
labels1= asarray(labels1)
print(photos1.shape,labels1.shape)
save('X_train.npy',photos1)
save('y_train.npy',labels1)

y_test.shape

#Chuyển kiểu dữ liệu
x_trains = x_train.astype('float32')
y_train = y_train.astype('float32')
x_train/=255
y_train/=255
from keras.utils import np_utils
y_train=np_utils.to_categorical(y_train,4)
y_test=np_utils.to_categorical(y_test,4)

#Chuyển kiểu dữ liệu
photos = photos.astype('float32')
photos1 = photos1.astype('float32')
photos/=255
photos1/=255
from keras.utils import np_utils
labels=np_utils.to_categorical(labels,4)
labels1=np_utils.to_categorical(labels1,4)

from keras.models import Sequential
from keras.layers import Conv2D
from tensorflow.keras.optimizers import SGD
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.callbacks import EarlyStopping 
from keras.layers import Dense, Activation, BatchNormalization, Dropout, LSTM
model = Sequential()
model.add(Conv2D(32,(3,3),activation='relu', kernel_initializer='he_uniform', padding='same', input_shape=(150, 150, 3)))
model.add(MaxPooling2D(2,2))
model.add(Flatten())
model.add(Dense(128,activation='relu',kernel_initializer='he_uniform'))
model.add(Dense(4,activation='softmax'))
opt = SGD(lr = 0.01, momentum = 0.9)
model.compile(optimizer=opt, loss = 'categorical_crossentropy',metrics=['accuracy'])
history = model.fit(photos,labels,epochs=100, batch_size=32, validation_data=(photos1,labels1),verbose=1)



# Độ chính xác
score = model.evaluate (photos1,labels1,verbose=0)
print('Test loss:',score[0])
print('Test accuracy:',score[1])

import matplotlib.pyplot as plt
plt.plot(history.history['accuracy'])
plt.plot(history.history['val_accuracy'])
plt.title('Mode accuracy')
plt.ylabel('accuracy')
plt.xlabel('epoch')
plt.legend(['Train','Validation'],loc = 'upper left')
plt.show()

#Kiểm tra nhận dạng
from keras.preprocessing.image import load_img
from keras.preprocessing.image import img_to_array
from keras.preprocessing.image import array_to_img
import matplotlib.pyplot as plt
import numpy as np
from google.colab.patches import cv2_imshow

filename = 'VanTho.jpg'
img = load_img(filename, target_size=(150,150))
img = img_to_array(img)
cv2_imshow(img)
img = img.reshape(1,150,150,3)
img = img.astype('float32')
img/=255
u= np.argmax(model.predict(img))
nhandang = ['cúc','thược dược','mặt trời','vạn thọ']
print(nhandang[u])